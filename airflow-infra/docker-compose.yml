version: "3.1"
networks:
  mynetwork:

services:
  spark-master:
    image: bde2020/spark-master:2.4.5-hadoop2.7
    container_name: spark-master
    networks:
      - mynetwork
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - "INIT_DAEMON_STEP=setup_spark"
      - "constraint:node==master_node"
    volumes:
      - ./spark/test.py:/spark/bin/test.py

  spark-worker-1:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-1
    networks:
      - mynetwork
    depends_on:
      - spark-master
    ports:
      - "8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==worker_one"

  spark-worker-2:
    image: bde2020/spark-worker:2.4.5-hadoop2.7
    container_name: spark-worker-2
    networks:
      - mynetwork
    depends_on:
      - spark-master
    ports:
      - "8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
      - "constraint:node==worker_two"

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    networks:
      - mynetwork
    ports:
      - 9870:9870
      - 9000:9000
    environment:
      - CLUSTER_NAME=test
    env_file:
      - hadoop/hadoop.env
    volumes:
      - ./hadoop/input.txt:/spark/bin/input.txt

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    networks:
      - mynetwork
    restart: always
    environment:
      - "SERVICE_PRECONDITION=namenode:9870"
    env_file:
      - ./hadoop/hadoop.env
    ports:
      - "9864"

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    networks:
      - mynetwork
    restart: always
    environment:
      - "SERVICE_PRECONDITION=namenode:9870"
    env_file:
      - ./hadoop/hadoop.env
    ports:
      - "9864"

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    networks:
      - mynetwork
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop/hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    networks:
      - mynetwork
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop/hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    networks:
      - mynetwork
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop/hadoop.env

  airflow:
    image: puckel/docker-airflow
    container_name: airflow
    networks:
      - mynetwork
    command: ["webserver","pip","install","pyspark"]
    ports:
      - 8081:8080

    volumes:
      - ./airflow_files/dags:/usr/local/airflow/dags
